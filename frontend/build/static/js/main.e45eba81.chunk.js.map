{"version":3,"sources":["assets/wandergold.svg","components/Header.js","components/CloseButton.js","assets/marker.svg","assets/mylocation.svg","components/Map.js","components/ResultGrid.js","components/SlideInMenuDefault.js","assets/premium.svg","lib/getDifficultyName.js","lib/getFormattedDate.js","lib/getHoursFromMinutes.js","components/ButtonDefault.js","components/StarButton.js","lib/getTagName.js","components/TourTags.js","components/WayTypesBar.js","components/TrackCard.js","lib/openExternalLink.js","lib/getFromApi.js","lib/getLastSavedPosition.js","pages/Details.js","assets/controls.svg","components/FilterMenu.js","lib/updateCenter.js","lib/saveLastPositionLocally.js","pages/Results.js","lib/getLastFilter.js","lib/saveLastFilter.js","lib/getBooleanFilterResult.js","assets/load.svg","components/Loader.js","assets/close.svg","assets/compass.svg","assets/startscreen.jpg","pages/Start.js","lib/getAutocompleteSuggestions.js","lib/getGeolocationOfUser.js","lib/getCoordsAndSearch.js","App.js","lib/getBookmarks.js","lib/storeBookmarks.js","GlobalStyles.js","reportWebVitals.js","index.js"],"names":["Header","goBackFunction","redirectToPath","history","useHistory","arrowLabel","Wrapper","onClick","push","xmlns","width","height","viewBox","d","transform","src","wandergoldSrc","alt","styled","header","CloseButton","setStateFunction","isInvertMode","size","color","CloseButtonStyled","type","fill","button","Map","centerCoords","handleCenterChanged","tracks","singleMode","kmlFile","firstLon","firstLat","containerStyle","mapRef","useRef","isLoaded","useLoadScript","googleMapsApiKey","process","map","ref","onLoad","current","mapContainerStyle","center","zoom","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","streetViewControl","fullscreenControl","mapTypeControl","mapTypeId","zIndex","onDragEnd","getCenter","toJSON","lat","lng","disableDefaultUI","url","position","icon","markerSrc","index","myLocationSrc","div","getDifficultyName","id","getFormattedDate","dateString","date","Date","getDate","getMonth","getFullYear","getHoursFromMinutes","minutes","length","hoursDecimal","Math","round","hoursInteger","floor","minutesDecimal","minutesInteger","StarButton","active","opacity","getTagName","tagNames","isNaN","TourTags","tagIds","Array","isArray","sort","random","tagId","className","WayTypesBar","surfaceValues","surfaceValuesSum","reduce","a","c","surfaceForcedPercentage","value","wayTypes","title","percentage","style","backgroundColor","version","aria-hidden","TrackCard","track","handleClick","detailedMode","setIsDetailMapActive","bookmarks","setBookmarks","difficulty","distance","lengthM","certYear","durationMin","description","tags","dateCreated","surface","elevation","region","trackPhotoSrc","staticMapImgSrc","googleRouteHref","bookmarkIndexInArray","findIndex","bookmark","isBookmarked","ImageHeading","big","photoSrc","BookmarkButton","toggleBookmarkArray","TrackFacts","staticMapUrl","MapMenuButton","target","window","open","openExternalLink","premiumSrc","slice","section","props","ButtonDefault","getFromApi","apiRessource","fetchUrl","axios","getLastSavedPosition","JSON","parse","localStorage","getItem","Details","setSingleTrack","useState","isDetailMapActive","urlId","useParams","lastPosition","lastPositionPair","Object","values","join","then","data","catch","e","console","error","DetailedMap","ResultGrid","main","SlideInMenuDefault","FilterMenu","setFilterCriteria","filterCriteria","setIsFilterActive","isFilterActive","tracksNumber","initialFilterState","roundtrip","bookmarked","maxDistance","lengthMInput","distanceKm","distanceKmPresetValue","ceil","lengthKm","lengthKmPresetValue","roundtripPresetValue","certYearPresetValue","bookmarkedPresetValue","Controls","min","distanceStep","step","max","defaultValue","name","onChange","handleFilterChange","lengthStep","defaultChecked","ButtonArea","event","checked","filterIsCheckbox","filterProperty","filterValue","newFilterCriteria","form","updateCenter","coords","setItem","stringify","Results","startingPoint","lastSearchedPosition","lastFilter","setTracks","latitude","longitude","setCenterCoords","useEffect","saveLastFilter","bookmarkForTrack","find","tracksWithBookmarks","filteredTracks","filter","Boolean","getBooleanFilterResult","FilterBar","FilterButton","keys","allTracks","controlsSrc","Loader","LoaderStyled","loadSrc","Start","handleSubmit","isSearchFocused","setIsSearchFocused","suggestionList","setSuggestionList","LogoArea","LocationSearch","onSubmit","preventDefault","SearchField","closeSrc","loading","placeString","setFunction","place","trim","response","predictions","suggestions","googlePlaceId","place_id","getAutocompleteSuggestions","onFocus","placeholder","SearchSuggestions","navigator","geolocation","setLocationFn","additionalProperties","locationName","isReadyToSearch","getCurrentPosition","uuidv4","results","geometry","searchObject","location","getCoordsAndSearch","startscreenJpg","compassSrc","App","setStartingPoint","singleTrack","savedBookmarks","getBookmarks","storeBookmarks","PageLayout","exact","path","to","createGlobalStyle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","GlobalStyles","document","getElementById"],"mappings":"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","file":"static/js/main.e45eba81.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wandergold.f5f9ae6c.svg\";","import { useHistory } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport wandergoldSrc from './../assets/wandergold.svg'\n\nexport default function Header({ goBackFunction, redirectToPath }) {\n  const history = useHistory()\n  const arrowLabel = redirectToPath === '/' ? 'Zum Start' : 'Zu den Ergebnissen'\n  function goBack() {\n    goBackFunction({})\n    history.push(redirectToPath)\n  }\n  return (\n    <Wrapper>\n      <h1>\n        <button onClick={() => goBack()}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"13.503\"\n            height=\"23.619\"\n            viewBox=\"0 0 13.503 23.619\"\n          >\n            <title>{arrowLabel}</title>\n            <path\n              d=\"M15.321,18l8.937-8.93a1.688,1.688,0,0,0-2.391-2.384L11.742,16.8a1.685,1.685,0,0,0-.049,2.327L21.86,29.32a1.688,1.688,0,0,0,2.391-2.384Z\"\n              transform=\"translate(-11.251 -6.194)\"\n            />\n          </svg>\n        </button>\n        <img src={wandergoldSrc} alt=\"wandergold\" />\n      </h1>\n    </Wrapper>\n  )\n}\nconst Wrapper = styled.header`\n  width: 100%;\n  height: 46px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  box-shadow: 0 1px 4px 0 var(--bar-shadow);\n  background: #fff;\n  z-index: 200;\n  display: grid;\n  place-items: center;\n\n  h1 {\n    font-size: 1em;\n    line-height: 1;\n    margin: 0;\n    margin-top: 3px;\n  }\n\n  img {\n    height: 30px;\n  }\n\n  button {\n    position: absolute;\n    left: 10px;\n    top: 0;\n    display: grid;\n    height: 100%;\n    width: 40px;\n    place-items: center left;\n    padding: 0;\n    border: 0;\n    color: var(--primary-color);\n    font-size: 0.8em;\n    background: none;\n    svg {\n      height: 35%;\n      fill: var(--primary-color);\n    }\n  }\n`\n","import styled from 'styled-components/macro'\n\nexport default function CloseButton({\n  setStateFunction,\n  isInvertMode,\n  size = '40',\n}) {\n  const color = isInvertMode\n    ? 'var(--text-invert-color)'\n    : 'var(--primary-color)'\n  return (\n    <CloseButtonStyled type=\"button\" onClick={() => setStateFunction(false)}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size}\n        height={size}\n        viewBox=\"0 0 29.25 29.25\"\n      >\n        <title>Schließen</title>\n        <g transform=\"translate(-3.375 -3.375)\">\n          <path\n            d=\"M23.295,21.705,19.589,18l3.705-3.705a1.124,1.124,0,0,0-1.589-1.589L18,16.411l-3.705-3.705a1.124,1.124,0,0,0-1.589,1.589L16.411,18l-3.705,3.705a1.086,1.086,0,0,0,0,1.589,1.116,1.116,0,0,0,1.589,0L18,19.589l3.705,3.705a1.129,1.129,0,0,0,1.589,0A1.116,1.116,0,0,0,23.295,21.705Z\"\n            fill={color}\n          />\n          <path\n            d=\"M18,5.344A12.651,12.651,0,1,1,9.049,9.049,12.573,12.573,0,0,1,18,5.344m0-1.969A14.625,14.625,0,1,0,32.625,18,14.623,14.623,0,0,0,18,3.375Z\"\n            fill={color}\n          />\n        </g>\n      </svg>\n    </CloseButtonStyled>\n  )\n}\n\nconst CloseButtonStyled = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 16px;\n  border: none;\n  background: none;\n  z-index: 100;\n`\n","export default __webpack_public_path__ + \"static/media/marker.97b64481.svg\";","export default __webpack_public_path__ + \"static/media/mylocation.45b3fdf8.svg\";","import {\n  GoogleMap,\n  KmlLayer,\n  Marker,\n  useLoadScript,\n} from '@react-google-maps/api'\nimport markerSrc from '../assets/marker.svg'\nimport myLocationSrc from '../assets/mylocation.svg'\n\nimport { useRef } from 'react'\n\nexport default function Map({\n  centerCoords,\n  handleCenterChanged,\n  tracks,\n  singleMode,\n  kmlFile,\n  firstLon,\n  firstLat,\n}) {\n  const apiKey = process.env.REACT_APP_GOOGLE_API_KEY\n  const baseUrlKml = process.env.REACT_APP_BASE_URL_KML\n  const containerStyle = {\n    width: '100%',\n    height: singleMode ? '100vh' : '50vh',\n  }\n\n  const options = {\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: true,\n    editable: true,\n    visible: true,\n    radius: 30000,\n    streetViewControl: false,\n    fullscreenControl: false,\n    mapTypeControl: false,\n    mapTypeId: 'terrain',\n    zIndex: 1,\n  }\n  const mapRef = useRef()\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: apiKey,\n  })\n\n  const map = (\n    <GoogleMap\n      ref={mapRef}\n      onLoad={(map) => (mapRef.current = map)}\n      mapContainerStyle={containerStyle}\n      center={centerCoords}\n      zoom={10}\n      options={options}\n      onDragEnd={() => {\n        const { lat, lng } = mapRef.current.getCenter().toJSON()\n        !singleMode && handleCenterChanged({ lat: +lat, lng: +lng })\n      }}\n      disableDefaultUI\n    >\n      {singleMode && kmlFile && (\n        <>\n          <KmlLayer url={baseUrlKml + kmlFile} />\n\n          <Marker\n            position={{ lat: +firstLat, lng: +firstLon }}\n            icon={markerSrc}\n          />\n        </>\n      )}\n      {!singleMode &&\n        tracks.map(({ firstLat, firstLon }, index) => (\n          <Marker\n            key={index}\n            position={{ lat: +firstLat, lng: +firstLon }}\n            icon={markerSrc}\n          />\n        ))}\n\n      <Marker position={centerCoords} icon={myLocationSrc} />\n    </GoogleMap>\n  )\n  return isLoaded ? map : null\n}\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n  display: grid;\n  align-content: start;\n  gap: 20px;\n  background: var(--result-background);\n  padding: 10px;\n  padding-top: 20px;\n`\n","import styled from 'styled-components/macro'\nexport default styled.div`\n  background: linear-gradient(\n    180deg,\n    rgba(66, 99, 26, 1) 0%,\n    rgba(62, 97, 19, 1) 100%\n  );\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  z-index: 300;\n  position: absolute;\n  font-size: 1em;\n  color: #eee;\n  transition: right 0.2s ease-out;\n`\n","export default __webpack_public_path__ + \"static/media/premium.7c64958b.svg\";","export default function getDifficultyName(id) {\n  const levels = ['leicht', 'mittel', 'hoch']\n  return levels[id - 1]\n}\n","export default function getFormattedDate(dateString) {\n  const date = new Date(dateString)\n  const formattedDay = date.getDate()\n  const formattedMonth = date.getMonth() + 1\n  const formattedDate =\n    formattedDay + '.' + formattedMonth + '.' + date.getFullYear()\n\n  return formattedDate\n}\n","export default function getHoursFromMinutes({ minutes, length }) {\n  const assumedWalkingSpeed = 2 / 75\n  const minutesAssumed = minutes\n    ? minutes\n    : Math.round(length * assumedWalkingSpeed)\n  const hoursDecimal = minutesAssumed / 60\n  const hoursInteger = Math.floor(hoursDecimal)\n  const minutesDecimal = hoursDecimal - hoursInteger\n  const minutesInteger = Math.round(minutesDecimal * 60)\n  const minutesIntWithLeadingZero =\n    (minutesInteger < 10 && '0') + minutesInteger\n  return hoursInteger + (minutesInteger && ':' + minutesIntWithLeadingZero)\n}\n","import styled from 'styled-components/macro'\nexport default styled.button`\n  width: 100%;\n  height: 40px;\n  background-color: var(--primary-color);\n  border: 0;\n  box-shadow: 0 1px 4px 0 var(--button-shadow);\n  color: var(--text-invert-color);\n  font-size: 1em;\n  letter-spacing: 0.1em;\n\n  &:active {\n    background-color: var(--primary-color-active);\n  }\n\n  strong {\n    padding-left: 25px;\n  }\n`\n","export default function StarButton({ active }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"28.74\"\n      height=\"27.938\"\n      viewBox=\"0 0 28.74 27.938\"\n    >\n      <title>Bookmark {active ? 'entfernen' : 'setzen'}</title>\n      <g transform=\"translate(-2.13 -2.472)\" opacity={active ? '0.9' : '0.6'}>\n        <path\n          d=\"M24.116,29.91a1.489,1.489,0,0,1-.692-.173l-5.773-3a2.5,2.5,0,0,0-2.3,0l-5.773,3a1.489,1.489,0,0,1-.692.173,1.532,1.532,0,0,1-1.146-.535,1.469,1.469,0,0,1-.336-1.2l1.029-6.634a2.511,2.511,0,0,0-.685-2.133L3.061,14.631A1.5,1.5,0,0,1,3.892,12.1l6.478-1.048A2.506,2.506,0,0,0,12.208,9.7l2.95-5.9a1.5,1.5,0,0,1,2.683,0l2.95,5.9a2.506,2.506,0,0,0,1.837,1.35L29.108,12.1a1.5,1.5,0,0,1,.832,2.531l-4.685,4.778a2.511,2.511,0,0,0-.685,2.133L25.6,28.176a1.469,1.469,0,0,1-.336,1.2A1.532,1.532,0,0,1,24.116,29.91Z\"\n          fill={active ? '#edc003' : '#fcfcfc'}\n        />\n        <path\n          d=\"M16.5,3.472a.982.982,0,0,0-.894.553l-2.95,5.9a3.007,3.007,0,0,1-2.2,1.62L3.972,12.594a1,1,0,0,0-.554,1.687L8.1,19.059a3.014,3.014,0,0,1,.822,2.56L7.9,28.253a.963.963,0,0,0,.221.8,1.026,1.026,0,0,0,.766.36.994.994,0,0,0,.461-.117l5.773-3a3,3,0,0,1,2.765,0l5.773,3a.994.994,0,0,0,.461.117,1.026,1.026,0,0,0,.766-.36.963.963,0,0,0,.221-.8l-1.029-6.634a3.014,3.014,0,0,1,.822-2.56l4.685-4.778a1,1,0,0,0-.554-1.687l-6.478-1.048a3.007,3.007,0,0,1-2.2-1.62l-2.95-5.9a.982.982,0,0,0-.894-.553m0-1a1.977,1.977,0,0,1,1.789,1.106l2.95,5.9a2,2,0,0,0,1.47,1.08l6.478,1.048A2,2,0,0,1,30.3,14.981l-4.685,4.778a2,2,0,0,0-.548,1.707L26.092,28.1a1.995,1.995,0,0,1-2.9,2.082l-5.773-3a2,2,0,0,0-1.843,0l-5.773,3a1.995,1.995,0,0,1-2.9-2.082l1.029-6.633a2,2,0,0,0-.548-1.707L2.7,14.981a2,2,0,0,1,1.109-3.374l6.478-1.048a2,2,0,0,0,1.47-1.08l2.95-5.9A1.977,1.977,0,0,1,16.5,2.472Z\"\n          fill=\"#fcfcfc\"\n        />\n      </g>\n    </svg>\n  )\n}\n","export default function getTagName(id) {\n  const index = id - 1\n  const tagNames = [\n    'Wald',\n    'Wiesen',\n    'Historisch interessant',\n    'Einkehren',\n    'Stadt',\n    'Hügelig',\n    'Alpin',\n    'Seen/Flüsse',\n    'Meer',\n  ]\n\n  return isNaN(index) || index < 0 || index > tagNames.length - 1\n    ? null\n    : tagNames[index]\n}\n","import styled from 'styled-components/macro'\nimport getTagName from '../lib/getTagName'\n\nexport default function TourTags({ tagIds }) {\n  return (\n    <Wrapper>\n      {Array.isArray(tagIds)\n        ? tagIds\n            .sort(() => Math.random() - 0.5)\n            .map((tagId) => (\n              <span className=\"tourtag\" key={tagId}>\n                {getTagName(tagId)}\n              </span>\n            ))\n        : '-'}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  margin-top: 10px;\n\n  span.tourtag {\n    font-size: 0.9em;\n    margin-right: 5px;\n    margin-bottom: 4px;\n    background-color: var(--tag-background);\n    border-radius: var(--default-border-radius);\n    padding: 8px;\n    display: inline-block;\n    white-space: nowrap;\n    letter-spacing: 1px;\n  }\n`\n","import styled from 'styled-components/macro'\n/**\n * Visualization bar of way surface\n */\nexport default function WayTypesBar({ surfaceValues }) {\n  const surfaceValuesSum = surfaceValues.reduce((a, c) => a + c)\n  const surfaceForcedPercentage = surfaceValues.map((value) =>\n    Math.round((value / surfaceValuesSum) * 100)\n  )\n\n  const wayTypes = [\n    {\n      title: 'Naturweg',\n      percentage: surfaceForcedPercentage[0] + '%',\n      color: '#71955d',\n    },\n    {\n      title: 'Leicht befestigt',\n      percentage: surfaceForcedPercentage[1] + '%',\n      color: '#b4cfb6',\n    },\n    {\n      title: 'Asphalt',\n      percentage: surfaceForcedPercentage[2] + '%',\n      color: '#737373',\n    },\n  ]\n\n  return (\n    <Wrapper>\n      <div className=\"waytypes\">\n        {wayTypes.map(({ percentage, color }, index) => (\n          <div\n            key={index}\n            style={{ width: percentage, backgroundColor: color }}\n          ></div>\n        ))}\n      </div>\n      <ul className=\"waytypes_legend\">\n        {wayTypes.map(({ title, color, percentage }, index) => (\n          <li key={index}>\n            <svg\n              viewBox=\"0 0 16 16\"\n              version=\"1.1\"\n              width=\"16\"\n              height=\"16\"\n              aria-hidden=\"true\"\n            >\n              <path fill={color} d=\"M8 4a4 4 0 100 8 4 4 0 000-8z\"></path>\n            </svg>\n            <br />\n            {title} <br />\n            {percentage}\n          </li>\n        ))}\n      </ul>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  overflow-x: scroll;\n  margin-top: 7px;\n\n  div.waytypes {\n    display: flex;\n    height: 10px;\n    width: 100%;\n  }\n\n  ul.waytypes_legend {\n    display: flex;\n    justify-content: space-around;\n    font-size: 0.9em;\n    grid-gap: 0;\n    text-align: center;\n  }\n`\n","import PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport premiumSrc from '../assets/premium.svg'\nimport getDifficultyName from '../lib/getDifficultyName'\nimport getFormattedDate from '../lib/getFormattedDate'\nimport getHoursFromMinutes from '../lib/getHoursFromMinutes'\nimport openExternalLink from '../lib/openExternalLink'\nimport ButtonDefault from './ButtonDefault'\nimport StarButton from './StarButton'\nimport TourTags from './TourTags'\nimport WayTypesBar from './WayTypesBar'\n\n/**\n * Central component for showing track data\n */\nexport default function TrackCard({\n  track,\n  handleClick,\n  detailedMode,\n  setIsDetailMapActive,\n  bookmarks,\n  setBookmarks,\n}) {\n  const {\n    id,\n    difficulty,\n    title,\n    distance,\n    lengthM,\n    certYear,\n    durationMin,\n    description,\n    tags,\n    dateCreated,\n    surface,\n    elevation,\n    region,\n    firstLat,\n    firstLon,\n  } = track\n\n  const apiKey = process.env.REACT_APP_GOOGLE_API_KEY\n  const trackPhotoSrc = process.env.REACT_APP_BASE_URL_IMAGE + id + '.jpg'\n\n  const staticMapImgSrc = `https://maps.googleapis.com/maps/api/staticmap?center=${firstLat},${firstLon}&zoom=10&size=400x200&key=${apiKey}&maptype=terrain&scale=2&markers=color:0x4C6A28|${firstLat},${firstLon}`\n  const googleRouteHref = `https://google.com/maps/?daddr=${firstLat},${firstLon}`\n\n  const bookmarkIndexInArray = bookmarks?.findIndex(\n    (bookmark) => bookmark.id === id\n  )\n  const isBookmarked = bookmarkIndexInArray > -1\n\n  return (\n    <>\n      <Wrapper detailedMode={detailedMode}>\n        {detailedMode && (\n          <>\n            <h2>{title}</h2>\n          </>\n        )}\n        <ImageHeading big={detailedMode} photoSrc={trackPhotoSrc}>\n          {!detailedMode && <h2 onClick={() => handleClick(track)}>{title}</h2>}\n          <BookmarkButton\n            onClick={() => {\n              setBookmarks(toggleBookmarkArray())\n            }}\n          >\n            <StarButton active={isBookmarked} />\n          </BookmarkButton>\n        </ImageHeading>\n\n        <TrackFacts\n          staticMapUrl={staticMapImgSrc}\n          onClick={() => (!detailedMode ? handleClick(track) : false)}\n        >\n          <ul>\n            {detailedMode && (\n              <>\n                <li className=\"one-column description\">{description}</li>\n                <li\n                  className=\"one-column static-map\"\n                  onClick={() => setIsDetailMapActive(true)}\n                ></li>\n                <li className=\"one-column static-map-menu\">\n                  <MapMenuButton onClick={() => setIsDetailMapActive(true)}>\n                    Wanderkarte\n                  </MapMenuButton>\n                  <MapMenuButton\n                    onClick={() => {\n                      setBookmarks(toggleBookmarkArray())\n                    }}\n                  >\n                    {!isBookmarked ? 'Like' : 'Unlike'}\n                  </MapMenuButton>\n                  <MapMenuButton\n                    onClick={() => openExternalLink(googleRouteHref)}\n                  >\n                    Anfahrt\n                  </MapMenuButton>\n                </li>\n              </>\n            )}\n\n            <li>\n              <strong>Länge: </strong>\n              {Math.round(lengthM / 100) / 10 + ' km'}\n            </li>\n            <li>\n              <strong>Dauer: </strong>\n              {'ca. ' +\n                getHoursFromMinutes({\n                  minutes: durationMin,\n                  length: lengthM,\n                }) +\n                ' Std'}\n            </li>\n            <li>\n              <strong>Entfernung: </strong>\n              {distance ? Math.round(distance / 1000) + ' km' : '-'}\n            </li>\n            <li>\n              <strong>Anspruch: </strong>\n              {getDifficultyName(difficulty)}\n            </li>\n            {certYear && (\n              <li className=\"premium\">\n                <img src={premiumSrc} alt=\"Premiumweg\" />\n              </li>\n            )}\n\n            {detailedMode && (\n              <>\n                <li className=\"one-column\">\n                  <strong>Region:</strong>\n                  {region}\n                </li>\n                {certYear && (\n                  <li className=\"one-column\">\n                    <strong>Premiumweg seit:</strong>\n                    {certYear}\n                  </li>\n                )}\n\n                {elevation && (\n                  <li className=\"one-column\">\n                    <strong>Höhenunterschied: </strong> {elevation} m\n                  </li>\n                )}\n\n                {surface && (\n                  <li className=\"one-column\">\n                    <strong>Wegbeschaffenheit</strong>\n                    <WayTypesBar surfaceValues={surface} />\n                  </li>\n                )}\n              </>\n            )}\n\n            <li className=\"one-column\">\n              <strong>Tour Tags: </strong>\n              <TourTags tagIds={tags} />\n            </li>\n            {detailedMode && (\n              <li className=\"one-column\">\n                <strong>Stand:</strong>\n                {getFormattedDate(dateCreated)}\n              </li>\n            )}\n          </ul>\n        </TrackFacts>\n      </Wrapper>\n    </>\n  )\n\n  function toggleBookmarkArray() {\n    return !isBookmarked\n      ? [...bookmarks, { id: id, date: new Date() }]\n      : [\n          ...bookmarks.slice(0, bookmarkIndexInArray),\n          ...bookmarks.slice(bookmarkIndexInArray + 1),\n        ]\n  }\n}\n\nconst Wrapper = styled.section`\n  padding: 10px;\n  border-radius: var(--default-border-radius);\n  box-shadow: 0 1px 4px 0 rgba(62, 56, 43, 0.25);\n  background: #fff;\n  display: grid;\n  grid-template-rows: ${(props) => (props.detailedMode ? 'none' : '1fr 1fr')};\n\n  h2 {\n    font-family: 'Kanit', sans-serif;\n    line-height: 1;\n    margin: ${(props) => (props.detailedMode ? '15px 0' : '0')};\n    font-size: ${(props) => (props.detailedMode ? '1.7em' : '1.3em')};\n    color: ${(props) =>\n      props.detailedMode ? 'var(--heading-color)' : 'var(--text-invert-color)'};\n    text-align: ${(props) => (props.detailedMode ? 'left' : 'center')};\n    text-shadow: ${(props) =>\n      props.detailedMode ? 'none' : '0px 0px 9px rgba(0, 0, 0, 0.8)'};\n  }\n`\n\nconst BookmarkButton = styled.button`\n  position: absolute;\n  right: 3px;\n  top: 3px;\n  padding: 0;\n  border: 0;\n  background-color: transparent;\n`\nconst ImageHeading = styled.section`\n  display: grid;\n  background: ${(props) =>\n      !props.big &&\n      'linear-gradient(rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0.45)),'}\n    url(${(props) => props.photoSrc});\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: center;\n  place-items: center;\n  padding: 10%;\n  position: relative;\n  z-index: 50;\n  border-radius: var(--default-border-radius);\n  height: ${(props) => (props.big ? '50vh' : 'unset')};\n`\n\nconst TrackFacts = styled.section`\n  font-size: 0.85em;\n\n  strong {\n    text-transform: uppercase;\n    font-size: 0.8em;\n    font-weight: 400;\n    color: var(--secondary-color);\n    letter-spacing: 1px;\n    margin-right: 8px;\n  }\n  ul {\n    list-style: none;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    position: relative;\n    column-gap: 5px;\n    li {\n      padding: 13px 0;\n      align-items: baseline;\n    }\n\n    li.premium {\n      position: absolute;\n      display: none;\n      top: 0;\n      right: 0;\n      border: none;\n      width: 40px;\n      img {\n        width: 100%;\n      }\n    }\n\n    li.one-column {\n      grid-column: 1 / -1;\n      display: block;\n      justify-content: unset;\n    }\n    li.description {\n      font-size: 1.2em;\n      line-height: 1.5;\n    }\n\n    li.static-map {\n      height: 170px;\n      background-image: url(${(props) => props.staticMapUrl});\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: cover;\n    }\n\n    li.static-map-menu {\n      display: flex;\n      margin-top: -15px;\n    }\n  }\n`\n\nconst MapMenuButton = styled(ButtonDefault)`\n  font-size: 0.8em;\n  color: var(--text-invert-color);\n  white-space: nowrap;\n`\n\nTrackCard.propTypes = {\n  track: PropTypes.object.isRequired,\n  detailedMode: PropTypes.bool,\n}\n","export default function openExternalLink(url, target = '_blank') {\n  window.open(url, target)\n}\n","import axios from 'axios'\n\nexport default function getFromApi(apiRessource) {\n  const baseUrlBackend = process.env.REACT_APP_BASE_URL_BACKEND\n  const fetchUrl = baseUrlBackend + apiRessource\n  return axios(fetchUrl)\n}\n","export default function getLastSavedPosition() {\n  return JSON.parse(localStorage.getItem('lastSearchedPosition'))\n}\n","import PropTypes from 'prop-types'\nimport { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport CloseButton from '../components/CloseButton'\nimport Map from '../components/Map'\nimport ResultGrid from '../components/ResultGrid'\nimport SlideInMenuDefault from '../components/SlideInMenuDefault'\nimport TrackCard from '../components/TrackCard'\nimport getFromApi from '../lib/getFromApi'\nimport getLastSavedPosition from '../lib/getLastSavedPosition'\n\nexport default function Details({\n  track,\n  setSingleTrack,\n  bookmarks,\n  setBookmarks,\n}) {\n  const [isDetailMapActive, setIsDetailMapActive] = useState(false)\n\n  let { urlId } = useParams()\n\n  const lastPosition = getLastSavedPosition()\n\n  const lastPositionPair = lastPosition\n    ? Object.values(lastPosition).join()\n    : ''\n\n  !track.id &&\n    getFromApi(`single-track/${urlId}/${lastPositionPair}`)\n      .then(({ data }) => setSingleTrack(data))\n      .catch((e) => console.error(e))\n\n  return (\n    <Wrapper>\n      <DetailedMap active={isDetailMapActive}>\n        <CloseButton setStateFunction={setIsDetailMapActive} color=\"#203d1f\" />\n        <Map\n          kmlFile={track.kmlFile}\n          firstLat={track.firstLat}\n          firstLon={track.firstLon}\n          singleMode\n        ></Map>\n      </DetailedMap>\n      {!isDetailMapActive && (\n        <ResultGrid>\n          <TrackCard\n            track={track}\n            detailedMode\n            setIsDetailMapActive={setIsDetailMapActive}\n            bookmarks={bookmarks}\n            setBookmarks={setBookmarks}\n          />\n        </ResultGrid>\n      )}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.main`\n  background-color: #fff;\n  height: 100vh;\n  overflow: scroll;\n  position: relative;\n  padding-top: 46px;\n`\n\nconst DetailedMap = styled(SlideInMenuDefault)`\n  right: ${(props) => (props.active ? '0' : '100%')};\n`\nDetails.propTypes = {\n  track: PropTypes.object.isRequired,\n}\n","export default __webpack_public_path__ + \"static/media/controls.ed9435d2.svg\";","import styled from 'styled-components/macro'\nimport CloseButton from './CloseButton'\nimport SlideInMenuDefault from './SlideInMenuDefault'\n\nexport default function FilterMenu({\n  setFilterCriteria,\n  filterCriteria,\n  setIsFilterActive,\n  isFilterActive,\n  tracksNumber,\n  initialFilterState,\n}) {\n  const { distance, lengthM, roundtrip, certYear, bookmarked } = filterCriteria\n\n  const maxDistance = 600000\n  const maxLengthM = 20000\n  const distanceInput = distance || maxDistance\n  const lengthMInput = lengthM || maxLengthM\n\n  const distanceStep = 10\n  const distanceKm = distanceInput / 1000\n  const distanceKmCeil = Math.ceil(distanceKm / distanceStep) * distanceStep\n  const distanceKmPresetValue = distanceKmCeil\n\n  const lengthStep = 1\n  const lengthKm = lengthMInput / 1000\n  const lengthKmCeil = Math.ceil(lengthKm / lengthStep) * lengthStep\n  const lengthKmPresetValue = lengthKmCeil\n\n  const roundtripPresetValue = roundtrip ? roundtrip : false\n  const certYearPresetValue = certYear ? certYear : false\n  const bookmarkedPresetValue = bookmarked ? bookmarked : false\n\n  return (\n    <Wrapper active={isFilterActive}>\n      <h2>Finde deine perfekte Tour</h2>\n      <CloseButton\n        setStateFunction={setIsFilterActive}\n        size=\"30\"\n        isInvertMode\n      />\n      <Controls>\n        <label>\n          <span>Umkreis: {distanceKmPresetValue} km</span>\n          <input\n            min={distanceStep * 1000}\n            step={distanceStep * 1000}\n            max={maxDistance}\n            type=\"range\"\n            defaultValue={distanceKmPresetValue * 1000}\n            name=\"distance\"\n            onChange={handleFilterChange}\n          />\n        </label>\n\n        <label>\n          <span>Maximale Länge: {lengthKmPresetValue} km</span>\n          <input\n            min={lengthStep * 1000}\n            step={lengthStep * 1000}\n            max={maxLengthM}\n            defaultValue={lengthKmPresetValue * 1000}\n            type=\"range\"\n            name=\"lengthM\"\n            onChange={handleFilterChange}\n          />\n        </label>\n\n        <label>\n          <span>Nur Rundwege: </span>\n          <input\n            type=\"checkbox\"\n            name=\"roundtrip\"\n            defaultChecked={roundtripPresetValue}\n            onChange={handleFilterChange}\n          />\n        </label>\n\n        <label>\n          <span>Nur Premiumwege: </span>\n          <input\n            type=\"checkbox\"\n            name=\"certYear\"\n            defaultChecked={certYearPresetValue}\n            onChange={handleFilterChange}\n          />\n        </label>\n        <label>\n          <span>Nur Bookmarks: </span>\n          <input\n            type=\"checkbox\"\n            name=\"bookmarked\"\n            defaultChecked={bookmarkedPresetValue}\n            onChange={handleFilterChange}\n          />\n        </label>\n        <ButtonArea>\n          <button type=\"button\" onClick={() => setIsFilterActive(false)}>\n            <strong>Treffer: {tracksNumber}</strong>\n          </button>\n          <button\n            type=\"reset\"\n            onClick={() => {\n              setFilterCriteria(initialFilterState)\n              setIsFilterActive(false)\n            }}\n          >\n            Zurücksetzen\n          </button>\n        </ButtonArea>\n      </Controls>\n    </Wrapper>\n  )\n\n  function handleFilterChange(event) {\n    const { type, name, value, checked } = event.target\n    const filterIsCheckbox = type === 'checkbox'\n    const filterProperty = name\n    const filterValue = filterIsCheckbox ? checked : +value\n    const newFilterCriteria = {\n      ...filterCriteria,\n      [filterProperty]: filterValue,\n    }\n    filterIsCheckbox && !filterValue && delete newFilterCriteria[filterProperty]\n    setFilterCriteria(newFilterCriteria)\n  }\n}\n\nconst Wrapper = styled(SlideInMenuDefault)`\n  right: ${(props) => (props.active ? '0' : '100%')};\n  padding: 12%;\n  font-size: 0.8em;\n\n  h2 {\n    font-family: 'Kanit', sans-serif;\n    font-weight: 400;\n    line-height: 1;\n    font-size: 1.7em;\n  }\n`\n\nconst Controls = styled.form`\n  label {\n    display: flex;\n    flex-direction: column;\n    margin: 2em 0;\n  }\n  input {\n    width: 100%;\n  }\n`\nconst ButtonArea = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  gap: 10px;\n  button {\n    display: block;\n    border: 1px solid var(--text-invert-color);\n    background: none;\n    color: var(--text-invert-color);\n    padding: 1em;\n    font-size: 1em;\n    letter-spacing: 1px;\n    border-radius: var(--default-border-radius);\n  }\n\n  button[type='button'] {\n    background: var(--text-invert-color);\n    border: none;\n    color: var(--primary-color);\n  }\n`\n","import getFromApi from './getFromApi'\nimport saveLastPositionLocally from './saveLastPositionLocally'\n\nexport default function updateCenter(centerCoords) {\n  saveLastPositionLocally(centerCoords)\n  const path = `track/${centerCoords.lat},${centerCoords.lng}`\n  return getFromApi(path)\n}\n","export default function saveLastPositionLocally(coords) {\n  localStorage.setItem('lastSearchedPosition', JSON.stringify(coords))\n}\n","import PropTypes from 'prop-types'\nimport { useEffect, useState } from 'react'\nimport styled from 'styled-components/macro'\nimport controlsSrc from '../assets/controls.svg'\nimport ButtonDefault from '../components/ButtonDefault'\nimport FilterMenu from '../components/FilterMenu'\nimport Map from '../components/Map'\nimport ResultGrid from '../components/ResultGrid'\nimport TrackCard from '../components/TrackCard'\nimport getBooleanFilterResult from '../lib/getBooleanFilterResult'\nimport getLastFilter from '../lib/getLastFilter'\nimport getLastSavedPosition from '../lib/getLastSavedPosition'\nimport saveLastFilter from '../lib/saveLastFilter'\nimport updateCenter from '../lib/updateCenter'\n\nexport default function Results({\n  startingPoint,\n  setSingleTrack,\n  bookmarks,\n  setBookmarks,\n}) {\n  const lastSearchedPosition = getLastSavedPosition()\n  const lastFilter = getLastFilter()\n  const initialFilterState = {\n    distance: 300000,\n  }\n\n  const [filterCriteria, setFilterCriteria] = useState(\n    lastFilter ?? initialFilterState\n  )\n  const [tracks, setTracks] = useState([])\n\n  const [centerCoords, setCenterCoords] = useState({\n    lat: startingPoint?.latitude || lastSearchedPosition.lat,\n    lng: startingPoint?.longitude || lastSearchedPosition.lng,\n  })\n  const [isFilterActive, setIsFilterActive] = useState(false)\n\n  useEffect(() => {\n    !isFilterActive &&\n      filterCriteria !== lastFilter &&\n      saveLastFilter(filterCriteria)\n  }, [isFilterActive])\n\n  useEffect(() => {\n    updateCenter(centerCoords)\n      .then(({ data }) => data)\n      .then((tracks) =>\n        tracks.map((track) => {\n          const bookmarkForTrack = bookmarks.find(\n            (bookmark) => bookmark.id === track.id\n          )\n          return bookmarkForTrack\n            ? { ...track, bookmarked: bookmarkForTrack.date }\n            : track\n        })\n      )\n      .then((tracksWithBookmarks) => setTracks(tracksWithBookmarks))\n      .catch((error) => console.error('Error:', error))\n  }, [centerCoords, bookmarks])\n\n  const filteredTracks = tracks.filter((track) =>\n    getBooleanFilterResult(track, filterCriteria)\n  )\n\n  return (\n    <Wrapper>\n      <Map\n        centerCoords={centerCoords}\n        handleCenterChanged={setCenterCoords}\n        tracks={filteredTracks}\n      />\n      <FilterBar>\n        <FilterButton onClick={() => setIsFilterActive(true)}>\n          <strong>Filter</strong>\n          {Object.keys(filterCriteria).length > 0 && (\n            <span>{Object.keys(filterCriteria).length}</span>\n          )}\n        </FilterButton>\n        <div>\n          {(filteredTracks.length === 0 ? 'Keine' : filteredTracks.length) +\n            ' Tour' +\n            (filteredTracks.length !== 1 ? 'en' : '') +\n            ' gefunden'}\n        </div>\n      </FilterBar>\n\n      <FilterMenu\n        filterCriteria={filterCriteria}\n        setFilterCriteria={setFilterCriteria}\n        setIsFilterActive={setIsFilterActive}\n        allTracks={tracks}\n        isFilterActive={isFilterActive}\n        tracksNumber={filteredTracks.length}\n        initialFilterState={initialFilterState}\n      />\n\n      {!isFilterActive && (\n        <ResultGrid>\n          {filteredTracks.map((track) => (\n            <TrackCard\n              track={track}\n              key={track.id}\n              handleClick={setSingleTrack}\n              detailedMode={false}\n              bookmarks={bookmarks}\n              setBookmarks={setBookmarks}\n            />\n          ))}\n        </ResultGrid>\n      )}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.main`\n  background-color: #fff;\n  height: 100vh;\n  overflow: scroll;\n  position: relative;\n  padding-top: 46px;\n  user-select: none;\n`\n\nconst FilterBar = styled.section`\n  background: #fff;\n  box-shadow: 0 1px 4px 0 var(--bar-shadow);\n  text-align: center;\n  padding: 0;\n  position: sticky;\n  top: 0;\n  margin-top: -30px;\n  font-size: 0.8em;\n  z-index: 100;\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n\n  div {\n    white-space: nowrap;\n    padding-top: 12px;\n  }\n`\n\nconst FilterButton = styled(ButtonDefault)`\n  strong {\n    background-color: transparent;\n    background-image: url(${controlsSrc});\n    background-repeat: no-repeat;\n    background-position-x: left;\n  }\n\n  span {\n    background: #00000020;\n    border-radius: var(--default-border-radius);\n    padding: 0 5px;\n    margin: 0 5px;\n    display: inline;\n  }\n`\n\nResults.propTypes = {\n  startingPoint: PropTypes.object.isRequired,\n}\n","export default function getLastFilter() {\n  return JSON.parse(localStorage.getItem('filterSettings'))\n}\n","export default function saveLastFilter(filterCriteria) {\n  localStorage.setItem('filterSettings', JSON.stringify(filterCriteria))\n}\n","export default function getBooleanFilterResult(track, filterCriteria) {\n  for (const filterProperty in filterCriteria) {\n    if (!track[filterProperty]) {\n      return false\n    } else if (\n      filterProperty === 'distance' &&\n      track[filterProperty] > filterCriteria[filterProperty]\n    ) {\n      return false\n    } else if (\n      filterProperty === 'lengthM' &&\n      track[filterProperty] > filterCriteria[filterProperty]\n    ) {\n      return false\n    } else if (\n      filterProperty === 'difficulty' &&\n      track[filterProperty] !== filterCriteria[filterProperty]\n    ) {\n      return false\n    } else if (\n      filterProperty === ('certYear' || 'bookmarked' || 'roundtrip') &&\n      Boolean(track[filterProperty]) !== filterCriteria[filterProperty]\n    ) {\n      return false\n    }\n  }\n  return true\n}\n","export default __webpack_public_path__ + \"static/media/load.5738ef34.svg\";","import loadSrc from './../assets/load.svg'\nimport styled from 'styled-components/macro'\n\n/**\n * simple loading indicator symbol\n */\nexport default function Loader() {\n  return (\n    <LoaderStyled>\n      <img src={loadSrc} alt=\"Daten werden geladen\" />\n    </LoaderStyled>\n  )\n}\n\nconst LoaderStyled = styled.div`\n  display: inline;\n`\n","export default __webpack_public_path__ + \"static/media/close.9b7cb5be.svg\";","export default __webpack_public_path__ + \"static/media/compass.b5f06bd3.svg\";","export default __webpack_public_path__ + \"static/media/startscreen.43b62095.jpg\";","import PropTypes from 'prop-types'\nimport { useState } from 'react'\nimport styled from 'styled-components/macro'\nimport Loader from '../components/Loader'\nimport getAutocompleteSuggestions from '../lib/getAutocompleteSuggestions'\nimport getCoordsAndSearch from '../lib/getCoordsAndSearch'\nimport getGeolocationOfUser from '../lib/getGeolocationOfUser'\nimport closeSrc from './../assets/close.svg'\nimport compassSrc from './../assets/compass.svg'\nimport startscreenJpg from './../assets/startscreen.jpg'\nimport wandergoldSrc from './../assets/wandergold.svg'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default function Start({ handleSubmit }) {\n  const [isSearchFocused, setIsSearchFocused] = useState(false)\n  const [suggestionList, setSuggestionList] = useState([])\n\n  return (\n    <Wrapper>\n      <LogoArea onClick={() => setIsSearchFocused(false)}>\n        <h1>\n          <img src={wandergoldSrc} alt=\"wandergold\" />\n        </h1>\n      </LogoArea>\n      <LocationSearch onSubmit={(event) => event.preventDefault()}>\n        <SearchField active={isSearchFocused}>\n          {isSearchFocused && (\n            <button type=\"button\" onClick={() => setIsSearchFocused(false)}>\n              <img src={closeSrc} alt=\"close\" />\n            </button>\n          )}\n          <input\n            onChange={(event) => {\n              !suggestionList.length && setSuggestionList([{ loading: true }])\n              getAutocompleteSuggestions(event.target.value, setSuggestionList)\n            }}\n            onFocus={() => setIsSearchFocused(true)}\n            type=\"text\"\n            placeholder={!isSearchFocused ? 'wo willst du hin?' : ''}\n          />\n        </SearchField>\n        {isSearchFocused && (\n          <SearchSuggestions>\n            <ul>\n              <>\n                {navigator.geolocation && (\n                  <li\n                    key={uuidv4()}\n                    className=\"geoLocator\"\n                    onClick={() =>\n                      getGeolocationOfUser(handleSubmit, {\n                        locationName: 'Mein Standort',\n                        isReadyToSearch: true,\n                      })\n                    }\n                  >\n                    Mein Standort\n                  </li>\n                )}\n\n                {suggestionList.map(\n                  ({ loading, description, googlePlaceId }) => (\n                    <li\n                      key={uuidv4()}\n                      onClick={() =>\n                        !loading\n                          ? getCoordsAndSearch(\n                              description,\n                              googlePlaceId,\n                              handleSubmit\n                            )\n                          : false\n                      }\n                    >\n                      {loading ? <Loader /> : description}\n                    </li>\n                  )\n                )}\n              </>\n            </ul>\n          </SearchSuggestions>\n        )}\n      </LocationSearch>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-rows: 60% 40%;\n  background-image: url(${startscreenJpg});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  padding: 5%;\n  padding-top: 0;\n  position: relative;\n`\n\nconst LogoArea = styled.div`\n  display: grid;\n  place-items: center stretch;\n\n  h1 {\n    line-height: 1;\n    text-align: center;\n  }\n\n  img {\n    width: 90%;\n  }\n`\n\nconst LocationSearch = styled.form`\n  display: grid;\n  grid-template-rows: 45px auto;\n  place-items: start center;\n  gap: 10px;\n  text-align: left;\n`\n\nconst SearchField = styled.div`\n  width: ${(props) => (props.active ? '100%' : '50%')};\n  min-width: 150px;\n  padding: 10px;\n  border-radius: 20px;\n  background-color: ${(props) => (props.active ? '#fff' : '#ffffff75')};\n  box-shadow: 0px 0px 25px 0px var(--secondary-color);\n  transition: width 0.5s ease-in-out, background-color 0.5s ease-in-out,\n    font-size 0.5s ease-in-out, transform 0.5s ease-in-out;\n  font-size: ${(props) => (props.active ? '1.2em' : '0.8em')};\n  line-height: 1;\n  white-space: nowrap;\n  button {\n    background: transparent;\n    border: none;\n    padding: 0;\n\n    img {\n      margin-right: 5px;\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  input {\n    font-size: 1em;\n    outline: none;\n    border: none;\n    background: transparent;\n    width: calc(90%-20px);\n  }\n`\n\nconst SearchSuggestions = styled.div`\n  background: #ffffff97;\n  border-radius: 5px;\n  width: 100%;\n  max-height: 100%;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  font-size: 0.9em;\n  padding: 5px;\n\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n\n    li {\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow-x: hidden;\n      padding: 8px;\n      border-radius: 5px;\n    }\n\n    li.geoLocator {\n      border-bottom: 1px solid var(--separator-color);\n      background-image: url(${compassSrc});\n      background-repeat: no-repeat;\n      background-size: 15px;\n      background-position-y: center;\n      background-position-x: 2px;\n      padding-left: 25px;\n    }\n\n    li:hover {\n      background-color: #fff;\n    }\n  }\n`\nStart.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n}\n","import getFromApi from './getFromApi'\n\nexport default function getAutocompleteSuggestions(placeString, setFunction) {\n  const place = placeString.trim()\n  if (place.length > 2) {\n    const path = `autocomplete/${place}`\n    getFromApi(path)\n      .then((response) => response.data.predictions)\n      .then((suggestions) =>\n        suggestions.map(({ description, place_id }) => ({\n          description: description,\n          googlePlaceId: place_id,\n        }))\n      )\n      .then((suggestions) => setFunction(suggestions.slice(0, 4)))\n      .catch(() => setFunction([{ description: 'Service nicht verfügbar' }]))\n  } else {\n    setFunction([])\n  }\n}\n","export default function getGeolocationOfUser(\n  setLocationFn,\n  additionalProperties\n) {\n  navigator.geolocation.getCurrentPosition((position) => {\n    setLocationFn({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      ...additionalProperties,\n    })\n  })\n}\n","import getFromApi from './getFromApi'\n\nexport default function getCoordsAndSearch(\n  description,\n  googlePlaceId,\n  setFunction\n) {\n  const path = `geocode/${googlePlaceId}`\n  getFromApi(path)\n    .then((response) => response.data.results[0].geometry)\n    .then((geometry) => {\n      const searchObject = {\n        locationName: description,\n        googlePlaceId: googlePlaceId,\n        latitude: geometry.location.lat,\n        longitude: geometry.location.lng,\n        isReadyToSearch: true,\n      }\n      setFunction(searchObject)\n    })\n}\n","import { useEffect, useState } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport Header from './components/Header'\nimport getBookmarks from './lib/getBookmarks'\nimport storeBookmarks from './lib/storeBookmarks'\nimport Details from './pages/Details'\nimport Results from './pages/Results'\nimport Start from './pages/Start'\n\nexport default function App() {\n  const [startingPoint, setStartingPoint] = useState({\n    latitude: null,\n    longitude: null,\n    locationName: '',\n    googlePlaceId: '',\n    isReadyToSearch: false,\n  })\n\n  const [singleTrack, setSingleTrack] = useState({})\n\n  const [bookmarks, setBookmarks] = useState(getBookmarks() ?? [])\n\n  useEffect(() => {\n    storeBookmarks(bookmarks)\n  }, [bookmarks])\n\n  return (\n    <PageLayout>\n      <Switch>\n        <Route exact path=\"/\">\n          {startingPoint.isReadyToSearch ? (\n            <Redirect to=\"/results\" />\n          ) : (\n            <Start handleSubmit={setStartingPoint} />\n          )}\n        </Route>\n\n        <Route path=\"/results\">\n          {singleTrack.id ? (\n            <Redirect to={`/details/${singleTrack.id}`} />\n          ) : (\n            <>\n              <Header goBackFunction={setStartingPoint} redirectToPath=\"/\" />\n              <Results\n                startingPoint={startingPoint}\n                setSingleTrack={setSingleTrack}\n                bookmarks={bookmarks}\n                setBookmarks={setBookmarks}\n              />\n            </>\n          )}\n        </Route>\n\n        <Route path=\"/details/:urlId\">\n          <>\n            <Header goBackFunction={setSingleTrack} redirectToPath=\"/results\" />\n            <Details\n              track={singleTrack}\n              setSingleTrack={setSingleTrack}\n              bookmarks={bookmarks}\n              setBookmarks={setBookmarks}\n            />\n          </>\n        </Route>\n      </Switch>\n    </PageLayout>\n  )\n}\n\nconst PageLayout = styled.div`\n  height: 100vh;\n  width: 100%;\n  max-width: 500px;\n  min-width: 250px;\n  margin: 0 auto;\n  box-shadow: 0px 0px 25px 0px #000;\n  background: #fff;\n  position: relative;\n`\n","export default function getBookmarks() {\n  const savedBookmarks = JSON.parse(localStorage.getItem('bookmarks'))\n  return savedBookmarks?.length > 0 ? savedBookmarks : []\n}\n","export default function storeBookmarks(bookmarks) {\n  localStorage.setItem('bookmarks', JSON.stringify(bookmarks))\n}\n","import { createGlobalStyle } from 'styled-components/macro'\n\nexport default createGlobalStyle`\n\n* {\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n}\n\n:root {\n    --primary-color: #4C6A28;\n    --primary-color-active: #2f4218; \n    --primary-gradient: linear-gradient(0deg, rgba(40,55,21,1) 0%, rgba(76,106,40,1) 100%); \n    --secondary-color: #3E382B;\n    --secondary-gradient: linear-gradient(0deg, rgba(112,101,76,1) 0%, rgba(62,56,43,1) 100%); \n    --secondary-shadow: 0px 4px 10px var(--secondary-color);\n    --text-color: #1a1a1a;\n    --text-invert-color: #fafafa;\n    --heading-color: #3F4F2C;\n    --default-border-radius: 5px;\n    --tag-background: #3e382b30;\n    --bar-shadow: rgba(62, 56, 43, 0.25);\n    --button-shadow: rgba(62, 56, 43, 0.65);\n    --result-background: #ddd;\n    --separator-color: #808080;\n\n}\n\nbody {\n    margin:0;\n    background-color: var(--secondary-color);\n    font-size:112.5%;\n    color: var(--text-color);\n   \n}\n\nbutton:focus {outline:0;}`\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport GlobalStyles from './GlobalStyles'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <GlobalStyles />\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\nreportWebVitals()\n"],"sourceRoot":""}